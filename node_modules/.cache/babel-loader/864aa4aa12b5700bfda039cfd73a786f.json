{"ast":null,"code":"var _jsxFileName = \"/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/NetflixModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Modal, Div, Container, Icon, Button, Text, Input, Row, Col, Image, Anchor } from \"atomize\";\nimport SearchResults from \"../SearchResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NetflixModal(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    props\n  } = _ref;\n  const [searchInput, setSearchInput] = useState();\n  const [APIData, setAPIData] = useState([]);\n  const [showComponent, setShowComponent] = useState(false);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [showResultsModal, setShowResultsModal] = useState(false);\n  useEffect(() => {\n    console.log(APIData);\n  }, []);\n\n  const netflixAPI = async e => {\n    let response = await fetch(\"https://unogsng.p.rapidapi.com/search?start_year=2000&limit=10&query=\" + searchInput, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"unogsng.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"2ddf3bdb3fmsh2c7a93e3f9444adp14261cjsn73b6f6de5b56\"\n      }\n    });\n    let result = await response.json();\n    setAPIData(result.results);\n    setShowComponent(!showComponent);\n  };\n\n  const searchItems = searchValue => {\n    setSearchInput(searchValue);\n\n    if (searchInput !== '') {\n      const filteredData = APIData.filter(item => {\n        return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(APIData);\n    }\n  };\n\n  const images = APIData.map((item, i) => item.img);\n  console.log(images);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: !showComponent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onClose: onClose,\n        bg: \"gray300\",\n        align: \"start\",\n        rounded: \"sm\",\n        h: \"12rem\",\n        maxW: \"72rem\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"Cross\",\n          pos: \"absolute\",\n          top: \"1rem\",\n          right: \"1rem\",\n          size: \"16px\",\n          onClick: onClose,\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Search\",\n          h: \"3rem\",\n          onChange: e => searchItems(e.target.value),\n          suffix: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: () => netflixAPI(),\n            pos: \"absolute\",\n            bg: \"danger800\",\n            hoverBg: \"danger700\",\n            h: \"3rem\",\n            w: \"5rem\",\n            top: \"0\",\n            right: \"0\",\n            rounded: {\n              r: \"md\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"Search\",\n              size: \"36px\",\n              color: \"white\",\n              cursor: \"pointer\",\n              pos: \"absolute\",\n              top: \"50%\",\n              right: \"1.33rem\",\n              transform: \"translateY(-50%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        d: \"flex\",\n        w: \"1120px\",\n        h: \"299px\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Anchor, {\n              children: [APIData.map((item, i) => {\n                return /*#__PURE__*/_jsxDEV(Image, {\n                  maxH: \"233px\",\n                  w: \"166\",\n                  shadow: \"3\",\n                  hoverShadow: \"4\",\n                  img: item.img\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 47\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(Text, {\n                children: APIData.map((item, i) => {\n                  return item.title;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this), \"})}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NetflixModal, \"mtgVr5DC7q8i8KglBMA6GgL56fM=\");\n\n_c = NetflixModal;\nexport default NetflixModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetflixModal\");","map":{"version":3,"sources":["/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/NetflixModal.js"],"names":["React","useState","useEffect","ReactDOM","Modal","Div","Container","Icon","Button","Text","Input","Row","Col","Image","Anchor","SearchResults","NetflixModal","isOpen","onClose","props","searchInput","setSearchInput","APIData","setAPIData","showComponent","setShowComponent","filteredResults","setFilteredResults","showResultsModal","setShowResultsModal","console","log","netflixAPI","e","response","fetch","result","json","results","searchItems","searchValue","filteredData","filter","item","Object","values","join","toLowerCase","includes","images","map","i","img","target","value","r","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Modal, Div, Container, Icon, Button, Text, Input, Row, Col, Image, Anchor } from \"atomize\";\nimport SearchResults from \"../SearchResults\"\n\nfunction NetflixModal({ isOpen, onClose, props}) {\n  const [searchInput, setSearchInput] = useState()\n  const [APIData, setAPIData] = useState([])\n  const [showComponent, setShowComponent] = useState(false)\n  const [filteredResults, setFilteredResults] = useState([])\n  const [showResultsModal, setShowResultsModal] = useState(false)\n\n  useEffect(() => {\n\n    console.log(APIData);\n  }, [])\n\n  const netflixAPI = async (e) => {\n    let response = await fetch(\"https://unogsng.p.rapidapi.com/search?start_year=2000&limit=10&query=\" + searchInput , {\n  \t   \"method\": \"GET\",\n  \t    \"headers\": {\n          \"x-rapidapi-host\": \"unogsng.p.rapidapi.com\",\n  \t\t    \"x-rapidapi-key\": \"2ddf3bdb3fmsh2c7a93e3f9444adp14261cjsn73b6f6de5b56\"\n        }\n      })\n      let result = await response.json()\n      setAPIData(result.results)\n      setShowComponent(!showComponent)\n  }\n\n  const searchItems = (searchValue) => {\n    setSearchInput(searchValue)\n    if (searchInput !== '') {\n      const filteredData = APIData.filter((item) => {\n        return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase())\n      })\n      setFilteredResults(filteredData)\n    } else {\n      setFilteredResults(APIData)\n    }\n  }\n\n  const images = APIData.map((item, i) => item.img)\n  console.log(images);\n\n\n  return(\n    <Container>\n      {!showComponent ?\n        <>\n      <Modal isOpen={isOpen} onClose={onClose} bg=\"gray300\" align=\"start\" rounded=\"sm\" h=\"12rem\" maxW=\"72rem\">\n        <br></br>\n        <Icon name=\"Cross\" pos=\"absolute\" top=\"1rem\" right=\"1rem\" size=\"16px\" onClick={onClose} cursor=\"pointer\"/>\n          <Input placeholder=\"Search\" h=\"3rem\" onChange={(e) => searchItems(e.target.value)}\n            suffix={\n              <Button type=\"submit\" onClick={() => netflixAPI()} pos=\"absolute\" bg=\"danger800\" hoverBg=\"danger700\" h=\"3rem\" w=\"5rem\" top=\"0\" right=\"0\" rounded={{ r: \"md\" }}>\n                <Icon name=\"Search\" size=\"36px\" color=\"white\" cursor=\"pointer\" pos=\"absolute\" top=\"50%\" right=\"1.33rem\" transform=\"translateY(-50%)\"/>\n              </Button>\n            }\n          />\n        <br></br>\n      </Modal></>\n    :\n    <>\n    <Row d=\"flex\" w=\"1120px\" h=\"299px\" justify=\"center\">\n      <Col>\n          <React.Fragment>\n          <Anchor>\n            {APIData.map((item, i) => {return(<Image maxH=\"233px\" w=\"166\" shadow=\"3\" hoverShadow=\"4\" img={item.img}>\n            </Image>)})}\n            <Text>\n              {APIData.map((item, i) => {return(item.title)})}\n            </Text>\n          </Anchor>\n        </React.Fragment>\n      </Col>\n      })}\n    </Row></>}\n    </Container>\n  )\n}\n\nexport default NetflixModal;\n"]},"metadata":{},"sourceType":"module"}