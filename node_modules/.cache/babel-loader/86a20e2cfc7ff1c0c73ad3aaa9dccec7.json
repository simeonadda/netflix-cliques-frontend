{"ast":null,"code":"var _jsxFileName = \"/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/QueuedTitles.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport NetflixModal from \"./NetflixModal\";\nimport { ThemeProvider, Modal, Container, Row, Col, Button, Text, Icon, Anchor, Image } from \"atomize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QueuedTitles() {\n  _s();\n\n  const [modal, showModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      d: \"flex\",\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        d: \"flex\",\n        justify: \"flex-start\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          textSize: \"subheader\",\n          textColor: \"black\",\n          fontFamily: \"code\",\n          textWeight: \"700\",\n          children: \"WATCHING NEXT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        d: \"flex\",\n        justify: \"flex-end\",\n        onClick: () => showModal(true),\n        children: /*#__PURE__*/_jsxDEV(Anchor, {\n          d: \"flex\",\n          flexDir: \"row\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"Add\",\n            color: \"success800\",\n            size: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            textSize: \"subheader\",\n            textColor: \"black\",\n            fontFamily: \"code\",\n            textWeight: \"700\",\n            children: \"ADD A TITLE YOU WANT TO WATCH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NetflixModal, {\n        isOpen: modal,\n        onClose: () => showModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        h: \"120px\",\n        w: \"120px\",\n        src: \"./netflix_n.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontFamily: \"code\",\n        textSize: \"subheader\",\n        children: [\"You currently have no titles. \", /*#__PURE__*/_jsxDEV(Anchor, {\n          children: \"Add a title you want to watch.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 84\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QueuedTitles, \"EhR9q5v0V12WflQ/U5IAHt/mM3A=\");\n\n_c = QueuedTitles;\nexport default QueuedTitles;\n\nvar _c;\n\n$RefreshReg$(_c, \"QueuedTitles\");","map":{"version":3,"sources":["/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/QueuedTitles.js"],"names":["React","useState","NetflixModal","ThemeProvider","Modal","Container","Row","Col","Button","Text","Icon","Anchor","Image","QueuedTitles","modal","showModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,SAA/B,EAA0CC,GAA1C,EAA+CC,GAA/C,EAAoDC,MAApD,EAA4DC,IAA5D,EAAkEC,IAAlE,EAAwEC,MAAxE,EAAgFC,KAAhF,QAA6F,SAA7F;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBd,QAAQ,CAAC,KAAD,CAAnC;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,CAAC,EAAC,MAAP;AAAc,MAAA,OAAO,EAAC,eAAtB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,OAAO,EAAC,YAAtB;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,QAAQ,EAAC,WADX;AAEE,UAAA,SAAS,EAAC,OAFZ;AAGE,UAAA,UAAU,EAAC,MAHb;AAIE,UAAA,UAAU,EAAC,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,OAAO,EAAC,UAAtB;AAAiC,QAAA,OAAO,EAAE,MAAMc,SAAS,CAAC,IAAD,CAAzD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,CAAC,EAAC,MAAV;AAAiB,UAAA,OAAO,EAAC,KAAzB;AAA+B,UAAA,KAAK,EAAC,QAArC;AAAA,kCACE,QAAC,IAAD;AACE,YAAA,IAAI,EAAC,KADP;AAEE,YAAA,KAAK,EAAC,YAFR;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,IAAD;AACE,YAAA,QAAQ,EAAC,WADX;AAEE,YAAA,SAAS,EAAC,OAFZ;AAGE,YAAA,UAAU,EAAC,MAHb;AAIE,YAAA,UAAU,EAAC,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eA4BE,QAAC,YAAD;AACE,QAAA,MAAM,EAAED,KADV;AAEE,QAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD;AAF1B;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkCE;AAAA;AAAA;AAAA;AAAA,YAlCF,eAmCE,QAAC,SAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,CAAC,EAAC,OAAT;AAAiB,QAAA,CAAC,EAAC,OAAnB;AAA2B,QAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,MAAjB;AAAwB,QAAA,QAAQ,EAAC,WAAjC;AAAA,kEAA2E,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCF,eAuCA;AAAA;AAAA;AAAA;AAAA,YAvCA,eAwCA;AAAA;AAAA;AAAA;AAAA,YAxCA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GA/CQF,Y;;KAAAA,Y;AAiDT,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport NetflixModal from \"./NetflixModal\"\nimport { ThemeProvider, Modal, Container, Row, Col, Button, Text, Icon, Anchor, Image } from \"atomize\";\n\nfunction QueuedTitles() {\n  const [modal, showModal] = useState(false)\n\n  return(\n    <Container>\n      <Row d=\"flex\" justify=\"space-between\">\n        <Col d=\"flex\" justify=\"flex-start\">\n          <Text\n            textSize=\"subheader\"\n            textColor=\"black\"\n            fontFamily=\"code\"\n            textWeight=\"700\"\n          >\n            WATCHING NEXT\n          </Text>\n        </Col>\n        <Col d=\"flex\" justify=\"flex-end\" onClick={() => showModal(true)}>\n          <Anchor d=\"flex\" flexDir=\"row\" align=\"center\">\n            <Icon\n              name=\"Add\"\n              color=\"success800\"\n              size=\"20px\"\n            />\n            <Text\n              textSize=\"subheader\"\n              textColor=\"black\"\n              fontFamily=\"code\"\n              textWeight=\"700\"\n            >\n              ADD A TITLE YOU WANT TO WATCH\n            </Text>\n          </Anchor>\n        </Col>\n        <NetflixModal\n          isOpen={modal}\n          onClose={() => showModal(false)}\n        />\n      </Row>\n      <br></br>\n      <Container>\n        <Image h=\"120px\" w=\"120px\" src=\"./netflix_n.png\"></Image>\n        <Text fontFamily=\"code\" textSize=\"subheader\">You currently have no titles. <Anchor>Add a title you want to watch.</Anchor></Text>\n      </Container>\n    <br></br>\n    <hr></hr>\n  </Container>\n  )\n}\n\nexport default QueuedTitles;\n"]},"metadata":{},"sourceType":"module"}