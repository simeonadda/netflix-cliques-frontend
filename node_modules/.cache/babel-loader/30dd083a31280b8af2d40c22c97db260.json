{"ast":null,"code":"var _jsxFileName = \"/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/NetflixModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Div, Container, Icon, Button, Text, Input } from \"atomize\";\nimport SearchResults from \"../SearchResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NetflixModal(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose\n  } = _ref;\n  const [searchInput, setSearchInput] = useState();\n  const [APIData, setAPIData] = useState([]);\n  const [filteredResults, setFilteredResults] = useState([]);\n  let showResults;\n  useEffect(() => {\n    console.log(APIData);\n    showResults = APIData.map(item => {\n      console.log(item);\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [item.img, item.title, item.synopsis]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    });\n    console.log(showResults);\n  }, [APIData]);\n\n  const netflixAPI = async e => {\n    let response = await fetch(\"https://unogsng.p.rapidapi.com/search?start_year=2000&limit=10&query=\" + searchInput, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"unogsng.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"2ddf3bdb3fmsh2c7a93e3f9444adp14261cjsn73b6f6de5b56\"\n      }\n    });\n    console.log(response);\n    let result = await response.json();\n    console.log(result);\n    setAPIData(result.results);\n  };\n\n  const searchItems = searchValue => {\n    setSearchInput(searchValue);\n\n    if (searchInput !== '') {\n      const filteredData = APIData.filter(item => {\n        return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(APIData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    bg: \"gray300\",\n    align: \"start\",\n    rounded: \"sm\",\n    h: \"50rem\",\n    maxW: \"72rem\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n      name: \"Cross\",\n      pos: \"absolute\",\n      top: \"1rem\",\n      right: \"1rem\",\n      size: \"16px\",\n      onClick: onClose,\n      cursor: \"pointer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Search\",\n      h: \"3rem\",\n      onChange: e => searchItems(e.target.value),\n      suffix: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: () => netflixAPI(),\n        pos: \"absolute\",\n        bg: \"danger800\",\n        hoverBg: \"danger700\",\n        h: \"3rem\",\n        w: \"5rem\",\n        top: \"0\",\n        right: \"0\",\n        rounded: {\n          r: \"md\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"Search\",\n          size: \"36px\",\n          color: \"white\",\n          cursor: \"pointer\",\n          pos: \"absolute\",\n          top: \"50%\",\n          right: \"1.33rem\",\n          transform: \"translateY(-50%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      showResults: showResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NetflixModal, \"EzXGkbCed4UmUJZn8U3cKaVj5u8=\");\n\n_c = NetflixModal;\nexport default NetflixModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetflixModal\");","map":{"version":3,"sources":["/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/NetflixModal.js"],"names":["React","useState","useEffect","Modal","Div","Container","Icon","Button","Text","Input","SearchResults","NetflixModal","isOpen","onClose","searchInput","setSearchInput","APIData","setAPIData","filteredResults","setFilteredResults","showResults","console","log","map","item","img","title","synopsis","netflixAPI","e","response","fetch","result","json","results","searchItems","searchValue","filteredData","filter","Object","values","join","toLowerCase","includes","target","value","r"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, Div, Container, Icon, Button, Text, Input } from \"atomize\";\nimport SearchResults from \"../SearchResults\"\n\nfunction NetflixModal({ isOpen, onClose }) {\n  const [searchInput, setSearchInput] = useState()\n  const [APIData, setAPIData] = useState([])\n  const [filteredResults, setFilteredResults] = useState([])\n\n  let showResults;\n\n  useEffect(() => {\n    console.log(APIData);\n    showResults = APIData.map((item) => {\n      console.log(item);\n      return(\n        <Container>\n          {item.img}\n          {item.title}\n          {item.synopsis}\n        </Container>\n      )\n    })\n    console.log(showResults);\n  }, [APIData])\n\n  const netflixAPI = async (e) => {\n    let response = await fetch(\"https://unogsng.p.rapidapi.com/search?start_year=2000&limit=10&query=\" + searchInput , {\n  \t   \"method\": \"GET\",\n  \t    \"headers\": {\n          \"x-rapidapi-host\": \"unogsng.p.rapidapi.com\",\n  \t\t    \"x-rapidapi-key\": \"2ddf3bdb3fmsh2c7a93e3f9444adp14261cjsn73b6f6de5b56\"\n        }\n      })\n      console.log(response);\n      let result = await response.json()\n      console.log(result);\n      setAPIData(result.results)\n  }\n\n  const searchItems = (searchValue) => {\n    setSearchInput(searchValue)\n    if (searchInput !== '') {\n      const filteredData = APIData.filter((item) => {\n        return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase())\n      })\n      setFilteredResults(filteredData)\n    } else {\n      setFilteredResults(APIData)\n    }\n  }\n\n\n\n  return(\n    <Modal isOpen={isOpen} onClose={onClose} bg=\"gray300\" align=\"start\" rounded=\"sm\" h=\"50rem\" maxW=\"72rem\" >\n      <br></br>\n      <Icon name=\"Cross\" pos=\"absolute\" top=\"1rem\" right=\"1rem\" size=\"16px\" onClick={onClose} cursor=\"pointer\"/>\n\n\n        <Input placeholder=\"Search\" h=\"3rem\" onChange={(e) => searchItems(e.target.value)}\n          suffix={\n            <Button type=\"submit\" onClick={() => netflixAPI()} pos=\"absolute\" bg=\"danger800\" hoverBg=\"danger700\" h=\"3rem\" w=\"5rem\" top=\"0\" right=\"0\" rounded={{ r: \"md\" }}>\n              <Icon name=\"Search\" size=\"36px\" color=\"white\" cursor=\"pointer\" pos=\"absolute\" top=\"50%\" right=\"1.33rem\" transform=\"translateY(-50%)\"/>\n            </Button>\n          }\n        />\n      <Container showResults={showResults}>\n\n      </Container>\n    </Modal>\n  )\n}\n\nexport default NetflixModal;\n"]},"metadata":{},"sourceType":"module"}