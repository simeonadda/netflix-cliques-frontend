{"ast":null,"code":"var _jsxFileName = \"/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport LoginSideDrawer from \"./Login\";\nimport Logout from \"./Logout\";\nimport Nav from \"./Nav\";\nimport Welcome from \"./Welcome\";\nimport Footer from \"./Footer\";\nimport Dashboard from \"./Dashboard/Dashboard\";\nimport { ThemeProvider, Div } from \"atomize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const userAuthHandler = () => {\n    setIsLoggedIn(!isLoggedIn);\n  };\n\n  const loginUser = async e => {\n    e.preventDefault();\n    const url = \"http://localhost:8000/api/v1/users/login\";\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: email,\n          password: password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\"\n      });\n\n      if (response.status === 200) {\n        // console.log(userAuth);\n        userAuthHandler();\n      } else {\n        response.json().then(data => {\n          console.log(data);\n        });\n      }\n    } catch (err) {\n      console.log('Error =>', err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Div, {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      userAuth: userAuthHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Welcome, {\n      userAuth: userAuthHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(LoginSideDrawer, {\n      userAuth: userAuthHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/App.js"],"names":["React","useState","LoginSideDrawer","Logout","Nav","Welcome","Footer","Dashboard","ThemeProvider","Div","App","isOpen","onClose","isLoggedIn","setIsLoggedIn","userAuthHandler","loginUser","e","preventDefault","url","response","fetch","method","body","JSON","stringify","email","password","headers","credentials","status","json","then","data","console","log","err"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,SAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,aAAT,EAAwBC,GAAxB,QAAmC,SAAnC;;;AAGA,SAASC,GAAT,OAAgC;AAAA;;AAAA,MAAnB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAmB;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMc,eAAe,GAAG,MAAM;AAC5BD,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFD;;AAIA,QAAMG,SAAS,GAAG,MAAOC,CAAP,IAAa;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAG,0CAAZ;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAChCG,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,KAAK,EAAEA,KADY;AAEnBC,UAAAA,QAAQ,EAAEA;AAFS,SAAf,CAF0B;AAMhCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SANuB;AAShCC,QAAAA,WAAW,EAAE;AATmB,OAAN,CAA5B;;AAWA,UAAIT,QAAQ,CAACU,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACAf,QAAAA,eAAe;AAChB,OAHD,MAGO;AACLK,QAAAA,QAAQ,CAACW,IAAT,GAAgBC,IAAhB,CAAsBC,IAAD,IAAU;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,SAFD;AAGD;AACF,KApBD,CAqBA,OAAMG,GAAN,EAAW;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,GAAxB;AACD;AACF,GA3BD;;AA6BA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAErB;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,UAAU,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAmB,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFhC,eAGG,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAHH,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA5CQL,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport LoginSideDrawer from \"./Login\"\nimport Logout from \"./Logout\"\nimport Nav from \"./Nav\";\nimport Welcome from \"./Welcome\";\nimport Footer from \"./Footer\";\nimport Dashboard from \"./Dashboard/Dashboard\"\nimport { ThemeProvider, Div } from \"atomize\";\n\n\nfunction App({isOpen, onClose}) {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n  const userAuthHandler = () => {\n    setIsLoggedIn(!isLoggedIn)\n  }\n\n  const loginUser = async (e) => {\n    e.preventDefault()\n    const url = \"http://localhost:8000/api/v1/users/login\"\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: email,\n          password: password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\",\n      })\n      if (response.status === 200) {\n        // console.log(userAuth);\n        userAuthHandler()\n      } else {\n        response.json().then((data) => {\n          console.log(data);\n        })\n      }\n    }\n    catch(err) {\n      console.log('Error =>', err);\n    }\n  }\n\n  return (\n    <Div className=\"App\">\n      <Nav userAuth={userAuthHandler} />\n      {isLoggedIn ? <Dashboard /> : <Welcome userAuth={userAuthHandler} /> }\n      {<LoginSideDrawer userAuth={userAuthHandler} />}\n      <Footer />\n    </Div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}