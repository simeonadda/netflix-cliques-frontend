{"ast":null,"code":"var _jsxFileName = \"/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/NetflixModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider, Modal, Div, Container, Icon, Button, Text, Input, Row, Col, Image, Anchor } from \"atomize\";\nimport SearchResults from \"../SearchResults\";\nimport SaveTitle from \"./SaveTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:8000\";\n\nfunction NetflixModal(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    props\n  } = _ref;\n  const [searchInput, setSearchInput] = useState();\n  const [APIData, setAPIData] = useState([]);\n  const [showComponent, setShowComponent] = useState(false);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [showResultsModal, setShowResultsModal] = useState(false);\n  const [img, setImg] = useState('');\n  const [title, setTitle] = useState('');\n  const [synopsis, setSynopsis] = useState('');\n  const [user, setUser] = useState('');\n  const [year, setYear] = useState('');\n  const theme = {\n    fontFamily: {\n      primary: 'Bitter, serif',\n      secondary: 'Oswald, serif',\n      code: 'Teko, sans-serif'\n    }\n  };\n\n  const setUserHandler = e => {\n    setImg(e.target.value);\n  };\n\n  const setImgHandler = e => {\n    setImg(e.target.value);\n  };\n\n  const setTitleHandler = e => {\n    setTitle(e.target.value);\n  };\n\n  const setSynopsisHandler = e => {\n    setSynopsis(e.target.value);\n  };\n\n  const setYearHandler = e => {\n    setImg(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const newTitleData = {\n      img: img,\n      title: title,\n      synopsis: synopsis,\n      user: user,\n      year: year\n    };\n\n    const saveNewTitleDataHandler = newTitleData => {\n      fetch(baseUrl + \"/api/v1/titles/add_title\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          img: newTitleData.img,\n          title: newTitleData.title,\n          synopsis: newTitleData.synopsis,\n          user: newTitleData.user,\n          year: newTitleData.year\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      }).then(resJson => {\n        const copyTitle = [...title];\n        copyTitle.push(resJson.data);\n        setTitle(copyTitle);\n      });\n    };\n\n    setImg('');\n    setTitle('');\n    setSynopsis('');\n  };\n\n  const netflixAPI = async e => {\n    let response = await fetch(\"https://unogsng.p.rapidapi.com/search?start_year=2000&limit=5&query=\" + searchInput, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"unogsng.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"2ddf3bdb3fmsh2c7a93e3f9444adp14261cjsn73b6f6de5b56\"\n      }\n    });\n    let result = await response.json();\n    setAPIData(result.results);\n    setShowComponent(!showComponent);\n  };\n\n  const searchItems = searchValue => {\n    setSearchInput(searchValue);\n\n    if (searchInput !== '') {\n      const filteredData = APIData.filter(item => {\n        return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(APIData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: !showComponent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onClose: onClose,\n        bg: \"gray300\",\n        align: \"start\",\n        rounded: \"sm\",\n        h: \"12rem\",\n        maxW: \"72rem\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"Cross\",\n          pos: \"absolute\",\n          top: \"1rem\",\n          right: \"1rem\",\n          size: \"16px\",\n          onClick: onClose,\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Search\",\n          h: \"3rem\",\n          onChange: e => searchItems(e.target.value),\n          suffix: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: () => netflixAPI(),\n            pos: \"absolute\",\n            bg: \"danger800\",\n            hoverBg: \"danger700\",\n            h: \"3rem\",\n            w: \"5rem\",\n            top: \"0\",\n            right: \"0\",\n            rounded: {\n              r: \"md\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"Search\",\n              size: \"36px\",\n              color: \"white\",\n              cursor: \"pointer\",\n              pos: \"absolute\",\n              top: \"50%\",\n              right: \"1.33rem\",\n              transform: \"translateY(-50%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          d: \"flex\",\n          w: \"1120px\",\n          h: \"299px\",\n          justify: \"center\",\n          flexDir: \"row\",\n          children: APIData.map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Anchor, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  shadow: \"3\",\n                  hoverShadow: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    maxH: \"233px\",\n                    w: \"166px\",\n                    shadow: \"3\",\n                    hoverShadow: \"4\",\n                    src: item.img\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  maxW: \"166px\",\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    fontFamily: \"secondary\",\n                    textColor: \"black\",\n                    textSize: \"subheader\",\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: submitHandler,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  value: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: item.year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: item.img\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: item.synopsis\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  d: \"flex\",\n                  type: \"submit\",\n                  h: \"2rem\",\n                  p: {\n                    x: \"0.75rem\"\n                  },\n                  textSize: \"body\",\n                  textColor: \"black\",\n                  hoverTextColor: \"white\",\n                  bg: \"danger800\",\n                  hoverBg: \"black\",\n                  border: \"1px solid\",\n                  borderColor: \"danger800\",\n                  hoverBorderColor: \"black\",\n                  m: {\n                    r: \"0.5rem\"\n                  },\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NetflixModal, \"0BxoyrhQNG1Z1vmAzIAsBlUGGLU=\");\n\n_c = NetflixModal;\nexport default NetflixModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetflixModal\");","map":{"version":3,"sources":["/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/NetflixModal.js"],"names":["React","useState","useEffect","ReactDOM","ThemeProvider","Modal","Div","Container","Icon","Button","Text","Input","Row","Col","Image","Anchor","SearchResults","SaveTitle","baseUrl","NetflixModal","isOpen","onClose","props","searchInput","setSearchInput","APIData","setAPIData","showComponent","setShowComponent","filteredResults","setFilteredResults","showResultsModal","setShowResultsModal","img","setImg","title","setTitle","synopsis","setSynopsis","user","setUser","year","setYear","theme","fontFamily","primary","secondary","code","setUserHandler","e","target","value","setImgHandler","setTitleHandler","setSynopsisHandler","setYearHandler","submitHandler","preventDefault","newTitleData","saveNewTitleDataHandler","fetch","method","body","JSON","stringify","headers","credentials","then","resJson","copyTitle","push","data","netflixAPI","response","result","json","results","searchItems","searchValue","filteredData","filter","item","Object","values","join","toLowerCase","includes","r","map","i","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider, Modal, Div, Container, Icon, Button, Text, Input, Row, Col, Image, Anchor } from \"atomize\";\nimport SearchResults from \"../SearchResults\"\nimport SaveTitle from \"./SaveTitle\"\n\nconst baseUrl = \"http://localhost:8000\";\n\nfunction NetflixModal({ isOpen, onClose, props}) {\n  const [searchInput, setSearchInput] = useState()\n  const [APIData, setAPIData] = useState([])\n  const [showComponent, setShowComponent] = useState(false)\n  const [filteredResults, setFilteredResults] = useState([])\n  const [showResultsModal, setShowResultsModal] = useState(false)\n\n  const[img, setImg] = useState('')\n  const[title, setTitle] = useState('')\n  const[synopsis, setSynopsis] = useState('')\n  const[user, setUser] = useState('')\n  const[year, setYear] = useState('')\n\n  const theme = {\n    fontFamily: {\n      primary: 'Bitter, serif',\n      secondary: 'Oswald, serif',\n      code: 'Teko, sans-serif'\n    }\n  }\n\n\n\n  const setUserHandler = (e) => {\n    setImg(e.target.value);\n  }\n\n  const setImgHandler = (e) => {\n    setImg(e.target.value);\n  }\n\n  const setTitleHandler = (e) => {\n    setTitle(e.target.value);\n  }\n\n  const setSynopsisHandler = (e) => {\n    setSynopsis(e.target.value);\n  }\n\n  const setYearHandler = (e) => {\n    setImg(e.target.value);\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    const newTitleData = {\n      img: img,\n      title: title,\n      synopsis: synopsis,\n      user: user,\n      year: year\n    };\n\n  const saveNewTitleDataHandler = (newTitleData) => {\n    fetch(baseUrl + \"/api/v1/titles/add_title\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        img: newTitleData.img,\n        title: newTitleData.title,\n        synopsis: newTitleData.synopsis,\n        user: newTitleData.user,\n        year: newTitleData.year\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n    }).then((resJson) => {\n      const copyTitle = [...title];\n      copyTitle.push(resJson.data)\n      setTitle(copyTitle)\n    });\n  };\n\n\n\n      setImg('');\n      setTitle('');\n      setSynopsis('');\n    }\n\n  const netflixAPI = async (e) => {\n    let response = await fetch(\"https://unogsng.p.rapidapi.com/search?start_year=2000&limit=5&query=\" + searchInput , {\n  \t   \"method\": \"GET\",\n  \t    \"headers\": {\n          \"x-rapidapi-host\": \"unogsng.p.rapidapi.com\",\n  \t\t    \"x-rapidapi-key\": \"2ddf3bdb3fmsh2c7a93e3f9444adp14261cjsn73b6f6de5b56\"\n        }\n      })\n      let result = await response.json()\n      setAPIData(result.results)\n      setShowComponent(!showComponent)\n  }\n\n  const searchItems = (searchValue) => {\n    setSearchInput(searchValue)\n    if (searchInput !== '') {\n      const filteredData = APIData.filter((item) => {\n        return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase())\n      })\n      setFilteredResults(filteredData)\n    } else {\n      setFilteredResults(APIData)\n    }\n  }\n\n\n  return(\n    <ThemeProvider theme={theme}>\n      {!showComponent ?\n        <>\n      <Modal isOpen={isOpen} onClose={onClose} bg=\"gray300\" align=\"start\" rounded=\"sm\" h=\"12rem\" maxW=\"72rem\">\n        <br></br>\n        <Icon name=\"Cross\" pos=\"absolute\" top=\"1rem\" right=\"1rem\" size=\"16px\" onClick={onClose} cursor=\"pointer\"/>\n          <Input placeholder=\"Search\" h=\"3rem\" onChange={(e) => searchItems(e.target.value)}\n            suffix={\n              <Button type=\"submit\" onClick={() => netflixAPI()} pos=\"absolute\" bg=\"danger800\" hoverBg=\"danger700\" h=\"3rem\" w=\"5rem\" top=\"0\" right=\"0\" rounded={{ r: \"md\" }}>\n                <Icon name=\"Search\" size=\"36px\" color=\"white\" cursor=\"pointer\" pos=\"absolute\" top=\"50%\" right=\"1.33rem\" transform=\"translateY(-50%)\"/>\n              </Button>\n            }\n          />\n        <br></br>\n      </Modal></>\n    :\n    <>\n    <Container>\n      <br></br>\n    <Row d=\"flex\" w=\"1120px\" h=\"299px\" justify=\"center\" flexDir=\"row\">\n        {APIData.map((item, i) => {\n          return(\n              <React.Fragment key={i}>\n                <Anchor>\n                  <Col shadow=\"3\" hoverShadow=\"4\">\n                    <Image maxH=\"233px\" w=\"166px\" shadow=\"3\" hoverShadow=\"4\" key={i} src={item.img}></Image>\n                  </Col>\n                  <Col maxW=\"166px\">\n                    <Text fontFamily=\"secondary\" textColor=\"black\" textSize=\"subheader\">\n                      {item.title}\n                    </Text>\n                  </Col>\n                </Anchor>\n                <form onSubmit={submitHandler}>\n                  <input value={item.title}/>\n                  <input value={item.year}/>\n                  <input value={item.img}/>\n                  <input value={item.synopsis}/>\n                  <Button d=\"flex\" type=\"submit\" h=\"2rem\"\n                    p={{ x: \"0.75rem\" }} textSize=\"body\" textColor=\"black\" hoverTextColor=\"white\" bg=\"danger800\" hoverBg=\"black\" border=\"1px solid\" borderColor=\"danger800\" hoverBorderColor=\"black\" m={{ r: \"0.5rem\" }}>\n                  Add\n                  </Button>\n                </form>\n              </React.Fragment>\n          )\n          })}\n    </Row></Container></>}\n  </ThemeProvider>\n  )\n}\n\nexport default NetflixModal;\n"]},"metadata":{},"sourceType":"module"}