{"ast":null,"code":"var _jsxFileName = \"/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/NetflixModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Modal, Div, Container, Icon, Button, Text, Input, Row, Col, Image, Anchor } from \"atomize\";\nimport SearchResults from \"../SearchResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NetflixModal(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose\n  } = _ref;\n  const [searchInput, setSearchInput] = useState();\n  const [APIData, setAPIData] = useState([]);\n  const [filteredResults, setFilteredResults] = useState([]);\n  let showResults;\n  useEffect(() => {\n    console.log(APIData);\n    showResults = APIData.map(item => /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(Anchor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        h: \"233px\",\n        w: \"166px\",\n        src: item.img\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this));\n    console.log(showResults);\n  }, [APIData]);\n\n  const netflixAPI = async e => {\n    let response = await fetch(\"https://unogsng.p.rapidapi.com/search?start_year=2000&limit=10&query=\" + searchInput, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"unogsng.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"2ddf3bdb3fmsh2c7a93e3f9444adp14261cjsn73b6f6de5b56\"\n      }\n    });\n    console.log(response);\n    let result = await response.json();\n    console.log(result);\n    setAPIData(result.results);\n  };\n\n  const searchItems = searchValue => {\n    setSearchInput(searchValue);\n\n    if (searchInput !== '') {\n      const filteredData = APIData.filter(item => {\n        return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(APIData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      bg: \"gray300\",\n      align: \"start\",\n      rounded: \"sm\",\n      h: \"12rem\",\n      maxW: \"72rem\",\n      showResults: showResults,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"Cross\",\n        pos: \"absolute\",\n        top: \"1rem\",\n        right: \"1rem\",\n        size: \"16px\",\n        onClick: onClose,\n        cursor: \"pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Search\",\n        h: \"3rem\",\n        onChange: e => searchItems(e.target.value),\n        suffix: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: (() => netflixAPI(), onClose),\n          pos: \"absolute\",\n          bg: \"danger800\",\n          hoverBg: \"danger700\",\n          h: \"3rem\",\n          w: \"5rem\",\n          top: \"0\",\n          right: \"0\",\n          rounded: {\n            r: \"md\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"Search\",\n            size: \"36px\",\n            color: \"white\",\n            cursor: \"pointer\",\n            pos: \"absolute\",\n            top: \"50%\",\n            right: \"1.33rem\",\n            transform: \"translateY(-50%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          d: \"flex\",\n          h: \"1120px\",\n          w: \"299px\",\n          children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NetflixModal, \"EzXGkbCed4UmUJZn8U3cKaVj5u8=\");\n\n_c = NetflixModal;\nexport default NetflixModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetflixModal\");","map":{"version":3,"sources":["/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/NetflixModal.js"],"names":["React","useState","useEffect","ReactDOM","Modal","Div","Container","Icon","Button","Text","Input","Row","Col","Image","Anchor","SearchResults","NetflixModal","isOpen","onClose","searchInput","setSearchInput","APIData","setAPIData","filteredResults","setFilteredResults","showResults","console","log","map","item","img","id","title","netflixAPI","e","response","fetch","result","json","results","searchItems","searchValue","filteredData","filter","Object","values","join","toLowerCase","includes","target","value","r"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Modal, Div, Container, Icon, Button, Text, Input, Row, Col, Image, Anchor } from \"atomize\";\nimport SearchResults from \"../SearchResults\"\n\nfunction NetflixModal({ isOpen, onClose }) {\n  const [searchInput, setSearchInput] = useState()\n  const [APIData, setAPIData] = useState([])\n  const [filteredResults, setFilteredResults] = useState([])\n\n  let showResults;\n\n  useEffect(() => {\n    console.log(APIData);\n    showResults = APIData.map((item) => (\n      <Col>\n        <Anchor></Anchor>\n        <Image key={item.id} h=\"233px\" w=\"166px\" src={item.img}></Image>\n        <Text>{item.title}</Text>\n      </Col>\n    ));\n    console.log(showResults);\n  }, [APIData])\n\n  const netflixAPI = async (e) => {\n    let response = await fetch(\"https://unogsng.p.rapidapi.com/search?start_year=2000&limit=10&query=\" + searchInput , {\n  \t   \"method\": \"GET\",\n  \t    \"headers\": {\n          \"x-rapidapi-host\": \"unogsng.p.rapidapi.com\",\n  \t\t    \"x-rapidapi-key\": \"2ddf3bdb3fmsh2c7a93e3f9444adp14261cjsn73b6f6de5b56\"\n        }\n      })\n      console.log(response);\n      let result = await response.json()\n      console.log(result);\n      setAPIData(result.results)\n  }\n\n  const searchItems = (searchValue) => {\n    setSearchInput(searchValue)\n    if (searchInput !== '') {\n      const filteredData = APIData.filter((item) => {\n        return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase())\n      })\n      setFilteredResults(filteredData)\n    } else {\n      setFilteredResults(APIData)\n    }\n  }\n\n\n\n  return(\n    <Container>\n    <Modal isOpen={isOpen} onClose={onClose} bg=\"gray300\" align=\"start\" rounded=\"sm\" h=\"12rem\" maxW=\"72rem\" showResults={showResults}>\n      <br></br>\n      <Icon name=\"Cross\" pos=\"absolute\" top=\"1rem\" right=\"1rem\" size=\"16px\" onClick={onClose} cursor=\"pointer\"/>\n\n\n        <Input placeholder=\"Search\" h=\"3rem\" onChange={(e) => searchItems(e.target.value)}\n          suffix={\n            <Button type=\"submit\" onClick={() => netflixAPI(), onClose} pos=\"absolute\" bg=\"danger800\" hoverBg=\"danger700\" h=\"3rem\" w=\"5rem\" top=\"0\" right=\"0\" rounded={{ r: \"md\" }}>\n              <Icon name=\"Search\" size=\"36px\" color=\"white\" cursor=\"pointer\" pos=\"absolute\" top=\"50%\" right=\"1.33rem\" transform=\"translateY(-50%)\"/>\n            </Button>\n          }\n        />\n      <br></br>\n\n      <Container>\n        <Row d=\"flex\" h=\"1120px\" w=\"299px\">\n          <Col>\n\n          </Col>\n        </Row>\n      </Container>\n\n    </Modal>\n\n    </Container>\n  )\n}\n\nexport default NetflixModal;\n"]},"metadata":{},"sourceType":"module"}