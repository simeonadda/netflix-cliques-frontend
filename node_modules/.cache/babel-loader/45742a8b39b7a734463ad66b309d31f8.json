{"ast":null,"code":"var _jsxFileName = \"/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/GetCliques.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Text, Image, Anchor } from \"atomize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:8000\";\n\nfunction GetCliques() {\n  _s();\n\n  const [cliques, setCliques] = useState([]);\n\n  const getCliques = () => {\n    fetch(baseUrl + \"/api/v1/cliques\").then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return [];\n      }\n    }).then(data => {\n      console.log(data);\n      setCliques(data.data);\n    });\n  };\n\n  useEffect(() => {\n    getCliques();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      h: \"120px\",\n      w: \"120px\",\n      src: \"./netflix_n.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontFamily: \"code\",\n      textSize: \"subheader\",\n      children: [\"You currently have no cliques.\", /*#__PURE__*/_jsxDEV(Anchor, {\n        children: \"Add a new clique.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 82\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GetCliques, \"4WsapcRGF5YCr8ERdYJrNB1/1NA=\");\n\n_c = GetCliques;\nexport default GetCliques;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetCliques\");","map":{"version":3,"sources":["/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/GetCliques.js"],"names":["React","useState","useEffect","Container","Text","Image","Anchor","baseUrl","GetCliques","cliques","setCliques","getCliques","fetch","then","res","status","json","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,MAAjC,QAA+C,SAA/C;;AAEA,MAAMC,OAAO,GAAG,uBAAhB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMU,UAAU,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAACL,OAAO,GAAG,iBAAX,CAAL,CACGM,IADH,CACSC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAP;AACD;AACF,KAPH,EAQGH,IARH,CAQSI,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAP,MAAAA,UAAU,CAACO,IAAI,CAACA,IAAN,CAAV;AACD,KAXH;AAYD,GAbD;;AAeAf,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,SAAD;AAAA,4BAEE,QAAC,KAAD;AAAO,MAAA,CAAC,EAAC,OAAT;AAAiB,MAAA,CAAC,EAAC,OAAnB;AAA2B,MAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,MAAjB;AAAwB,MAAA,QAAQ,EAAC,WAAjC;AAAA,gEAA2E,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3E;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA/BQH,U;;KAAAA,U;AAiCT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Container, Text, Image, Anchor } from \"atomize\";\n\nconst baseUrl = \"http://localhost:8000\";\n\nfunction GetCliques() {\n  const [cliques, setCliques] = useState([])\n\n  const getCliques = () => {\n    fetch(baseUrl + \"/api/v1/cliques\")\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          return [];\n        }\n      })\n      .then((data) => {\n        console.log(data);\n        setCliques(data.data);\n      });\n  };\n\n  useEffect(() => {\n    getCliques()\n  }, [])\n\n  return(\n    <Container>\n\n      <Image h=\"120px\" w=\"120px\" src=\"./netflix_n.png\"></Image>\n      <Text fontFamily=\"code\" textSize=\"subheader\">You currently have no cliques.<Anchor>Add a new clique.</Anchor></Text>\n\n\n    </Container>\n  )\n}\n\nexport default GetCliques;\n"]},"metadata":{},"sourceType":"module"}