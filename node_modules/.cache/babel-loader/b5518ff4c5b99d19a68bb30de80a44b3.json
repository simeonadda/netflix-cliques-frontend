{"ast":null,"code":"var _jsxFileName = \"/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/NetflixModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, Div, Container, Icon, Button, Text, Input } from \"atomize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NetflixModal(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose\n  } = _ref;\n  const [searchInput, setSearchInput] = useState('');\n  const [APIData, setAPIData] = useState([]);\n  const [filteredResults, setFilteredResults] = useState([]);\n\n  const netflixAPI = async e => {\n    fetch(\"https://unogsng.p.rapidapi.com/search?start_year=2000&limit=10\" + searchInput, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"unogsng.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"2ddf3bdb3fmsh2c7a93e3f9444adp14261cjsn73b6f6de5b56\"\n      }\n    }).then(response => {\n      setAPIData(response.data);\n      console.log(response.data);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const searchItems = searchValue => {\n    setSearchInput(searchValue);\n\n    if (searchInput !== '') {\n      const filteredData = APIData.filter(item => {\n        return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(APIData);\n    }\n  };\n\n  const showResults = filteredResults.map(item => {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [item.img, item.title, item.synopsis]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    bg: \"black\",\n    align: \"start\",\n    rounded: \"sm\",\n    h: \"10rem\",\n    maxW: \"72rem\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n      name: \"Cross\",\n      pos: \"absolute\",\n      top: \"1rem\",\n      right: \"1rem\",\n      size: \"16px\",\n      onClick: onClose,\n      cursor: \"pointer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Search\",\n      h: \"3rem\",\n      onChange: e => searchItems(e.target.value),\n      suffix: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => console.log(\"clicked\"),\n        pos: \"absolute\",\n        bg: \"danger800\",\n        hoverBg: \"danger700\",\n        h: \"3rem\",\n        w: \"5rem\",\n        top: \"0\",\n        right: \"0\",\n        rounded: {\n          r: \"md\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"Search\",\n          size: \"36px\",\n          color: \"white\",\n          cursor: \"pointer\",\n          pos: \"absolute\",\n          top: \"50%\",\n          right: \"1.5rem\",\n          transform: \"translateY(-50%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"showResults\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NetflixModal, \"fK2VumxO3yLichzExxz66/sFntM=\");\n\n_c = NetflixModal;\nexport default NetflixModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetflixModal\");","map":{"version":3,"sources":["/Users/sim/sei-bromeliad/projects/netflix-cliques-frontend/netflix-cliques/src/Dashboard/NetflixModal.js"],"names":["React","useState","Modal","Div","Container","Icon","Button","Text","Input","NetflixModal","isOpen","onClose","searchInput","setSearchInput","APIData","setAPIData","filteredResults","setFilteredResults","netflixAPI","e","fetch","then","response","data","console","log","catch","err","error","searchItems","searchValue","filteredData","filter","item","Object","values","join","toLowerCase","includes","showResults","map","img","title","synopsis","target","value","r"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Div, Container, Icon, Button, Text, Input } from \"atomize\";\n\nfunction NetflixModal({ isOpen, onClose }) {\n  const [searchInput, setSearchInput] = useState('')\n  const [APIData, setAPIData] = useState([])\n  const [filteredResults, setFilteredResults] = useState([])\n\n  const netflixAPI = async (e) => {\n    fetch(\"https://unogsng.p.rapidapi.com/search?start_year=2000&limit=10\" + searchInput, {\n  \t   \"method\": \"GET\",\n  \t    \"headers\": {\n          \"x-rapidapi-host\": \"unogsng.p.rapidapi.com\",\n  \t\t    \"x-rapidapi-key\": \"2ddf3bdb3fmsh2c7a93e3f9444adp14261cjsn73b6f6de5b56\"\n        }\n      })\n    .then(response => {\n      setAPIData(response.data)\n    \tconsole.log(response.data);\n    })\n    .catch(err => {\n    \tconsole.error(err);\n    });\n  }\n\n  const searchItems = (searchValue) => {\n    setSearchInput(searchValue)\n    if (searchInput !== '') {\n      const filteredData = APIData.filter((item) => {\n        return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase())\n      })\n      setFilteredResults(filteredData)\n    } else {\n      setFilteredResults(APIData)\n    }\n  }\n\n  const showResults = filteredResults.map((item) => {\n    return(\n      <Container>\n        {item.img}\n        {item.title}\n        {item.synopsis}\n      </Container>\n    )\n  })\n\n  return(\n    <Modal isOpen={isOpen} onClose={onClose} bg=\"black\" align=\"start\" rounded=\"sm\" h=\"10rem\" maxW=\"72rem\" >\n      <br></br>\n      <Icon name=\"Cross\" pos=\"absolute\" top=\"1rem\" right=\"1rem\" size=\"16px\" onClick={onClose} cursor=\"pointer\"/>\n\n      <Input placeholder=\"Search\" h=\"3rem\" onChange={(e) => searchItems(e.target.value)}\n        suffix={\n          <Button onClick={() => console.log(\"clicked\")} pos=\"absolute\" bg=\"danger800\" hoverBg=\"danger700\" h=\"3rem\" w=\"5rem\" top=\"0\" right=\"0\" rounded={{ r: \"md\" }}>\n            <Icon name=\"Search\" size=\"36px\" color=\"white\" cursor=\"pointer\" pos=\"absolute\" top=\"50%\" right=\"1.5rem\" transform=\"translateY(-50%)\"/>\n          </Button>\n        }\n      />\n      <showResults />\n    </Modal>\n  )\n}\n\nexport default NetflixModal;\n"]},"metadata":{},"sourceType":"module"}